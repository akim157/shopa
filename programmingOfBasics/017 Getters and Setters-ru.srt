1

00:00:00,000 --> 00:00:04,000

Так в последнем



2

00:00:04,000 --> 00:00:08,000

лекция, мы преобразовали этих двух участников в частные члены.



3

00:00:08,000 --> 00:00:12,000

Точнее, это не частные участники,



4

00:00:12,000 --> 00:00:16,000

объекта круга, потому что технически они не находятся внутри



5

00:00:16,000 --> 00:00:20,000

объект круга, есть локальные переменные, которые мы определили



6

00:00:20,000 --> 00:00:24,000

внутри этой функции круга, но из объектно-ориентированного



7

00:00:24,000 --> 00:00:28,000

С точки зрения, мы можем ссылаться на них как на частные члены объекта круга.



8

00:00:28,000 --> 00:00:32,000

Теперь я хочу упростить код здесь, чтобы мы могли сосредоточиться



9

00:00:32,000 --> 00:00:36,000

по небольшой проблеме, я собираюсь удалить эту вычислительную функцию,



10

00:00:36,000 --> 00:00:40,000

хорошо, так что у нас есть этот частный



11

00:00:40,000 --> 00:00:44,000

имущество. defaultLocation. Мы не можем получить доступ



12

00:00:44,000 --> 00:00:48,000

это снаружи. Но что, если мы хотим показать это



13

00:00:48,000 --> 00:00:52,000

расположение по умолчанию где-то в нашем приложении? Поэтому мы не хотим его изменять



14

00:00:52,000 --> 00:00:56,000

мы просто хотим быть в состоянии прочитать это. Итак, одно решение



15

00:00:56,000 --> 00:01:00,000

это определить метод здесь, это.



16

00:01:00,000 --> 00:01:04,000

getDefaultLocation.



17

00:01:04,000 --> 00:01:08,000

Установите его в функцию, и в этой функции,



18

00:01:08,000 --> 00:01:12,000

мы просто возвращаем defaultLocation,



19

00:01:12,000 --> 00:01:16,000

еще раз, мы имеем дело с внутренней функцией здесь, закрытие этого



20

00:01:16,000 --> 00:01:20,000

Функция включает в себя все переменные, определенные здесь как



21

00:01:20,000 --> 00:01:24,000

а также все переменные, определенные в родительских функциях. Так вот



22

00:01:24,000 --> 00:01:28,000

у нас есть доступ к местоположению по умолчанию. И с этим



23

00:01:28,000 --> 00:01:32,000

мы можем вызвать circle.getDefaultLocaton.



24

00:01:32,000 --> 00:01:36,000

Однако мне не нравится этот синтаксис, мне не нравится



25

00:01:36,000 --> 00:01:40,000

тот факт, что мы называем это как метод, было бы лучше



26

00:01:40,000 --> 00:01:44,000

если бы мы могли получить доступ к этому свойству, как это, по умолчанию



27

00:01:44,000 --> 00:01:48,000

Расположение, но мы не должны быть в состоянии установить это снаружи



28

00:01:48,000 --> 00:01:52,000

мы можем только прочитать это. Итак, позвольте мне показать вам, как определить



29

00:01:52,000 --> 00:01:56,000

собственность как это. Так,



30

00:01:56,000 --> 00:02:00,000

этот объект, который вы видели до сих пор, имеет



31

00:02:00,000 --> 00:02:04,000

defineProperty, у нас есть другой метод под названием define



32

00:02:04,000 --> 00:02:08,000

Свойства, если вы хотите определить несколько свойств за один раз.



33

00:02:08,000 --> 00:02:12,000

Теперь первым аргументом этого метода является объект, который вы хотите



34

00:02:12,000 --> 00:02:16,000

добавить новое свойство в. Этот объект



35

00:02:16,000 --> 00:02:20,000

тот, на который ссылается это. Новый круг объекта.



36

00:02:20,000 --> 00:02:24,000

Правильно? Итак, мы передаем это здесь, второй аргумент



37

00:02:24,000 --> 00:02:28,000

это имя нашей собственности, мы хотим назвать это по умолчанию



38

00:02:28,000 --> 00:02:32,000

Место нахождения. И третий аргумент



39

00:02:32,000 --> 00:02:36,000

объект, в этот объект мы добавляем ключ



40

00:02:36,000 --> 00:02:40,000

пара значений, ключ получить, это специальный ключ



41

00:02:40,000 --> 00:02:44,000

слово для JavaScript и значение как функция.



42

00:02:44,000 --> 00:02:48,000

Итак, когда мы получаем доступ



43

00:02:48,000 --> 00:02:52,000

circle.defaultLocation



44

00:02:52,000 --> 00:02:56,000

эта функция будет вызвана, хорошо?



45

00:02:56,000 --> 00:03:00,000

Теперь здесь мы можем просто вернуть defaultLocation.



46

00:03:00,000 --> 00:03:04,000

Опять же, эта переменная



47

00:03:04,000 --> 00:03:08,000

часть замыкания этой внутренней функции, поэтому здесь мы можем



48

00:03:08,000 --> 00:03:12,000

доступ к нему, верно? Теперь в коде против вы этого не видите



49

00:03:12,000 --> 00:03:16,000

в интеллигенции. Таким образом, у нас нет дефолта



50

00:03:16,000 --> 00:03:20,000

Местоположение как свойство, однако, если мы сохраняем изменения



51

00:03:20,000 --> 00:03:24,000

Ой, я ошибся здесь, на самом деле, я должен был использовать



52

00:03:24,000 --> 00:03:28,000

defineProperty. Так что сохраните изменения,



53

00:03:28,000 --> 00:03:32,000

Хорошо, теперь посмотрим на объект круга. Круг



54

00:03:32,000 --> 00:03:36,000

так вот наша новая собственность,



55

00:03:36,000 --> 00:03:40,000

defaultLocation, вы можете видеть ... перед ним, потому что это



56

00:03:40,000 --> 00:03:44,000

компьютерная собственность. Когда мы нажимаем на это, получить



57

00:03:44,000 --> 00:03:48,000

Функция будет выполнена, и вот результат, наш



58

00:03:48,000 --> 00:03:52,000

defaultLocation. Хорошо? Также вы можете увидеть



59

00:03:52,000 --> 00:03:56,000

эта функция хранится здесь как получатель. Итак, добытчик



60

00:03:56,000 --> 00:04:00,000

это функция, которая используется для чтения свойства Так что это свойство



61

00:04:00,000 --> 00:04:04,000

у нас здесь, defaultLocation, мы называем это как



62

00:04:04,000 --> 00:04:08,000

свойство readOnly. Теперь, если вы хотите установить значение этого свойства



63

00:04:08,000 --> 00:04:12,000

снаружи мы определяем сеттер. Так что в этом объекте



64

00:04:12,000 --> 00:04:16,000

мы добавляем еще одну пару ключ-значение, ключ установлен



65

00:04:16,000 --> 00:04:20,000

которое является специальным ключевым словом, а значение является функцией.



66

00:04:20,000 --> 00:04:24,000

Теперь эта функция принимает аргумент с именем value.



67

00:04:24,000 --> 00:04:28,000

Мы можем установить этот defaultLocation в это значение.



68

00:04:28,000 --> 00:04:32,000

Но что интересно, потому что мы используем функцию



69

00:04:32,000 --> 00:04:36,000

в этой функции мы можем выполнить некоторую проверку,



70

00:04:36,000 --> 00:04:40,000

для этого значения перед установкой местоположения по умолчанию.



71

00:04:40,000 --> 00:04:44,000

Например, мы можем написать



72

00:04:44,000 --> 00:04:48,000

простая логика, как это. IfValue



73

00:04:48,000 --> 00:04:52,000

.x фальшивка или



74

00:04:52,000 --> 00:04:56,000

value.y это фальшивка,



75

00:04:56,000 --> 00:05:00,000

мы можем выбросить новую ошибку, снова ошибку



76

00:05:00,000 --> 00:05:04,000

встроенный конструктор для создания ошибки



77

00:05:04,000 --> 00:05:08,000

объекты. Мы передаем строку, неверное местоположение.



78

00:05:08,000 --> 00:05:12,000

Так что это преимущество сеттера.



79

00:05:12,000 --> 00:05:16,000

Теперь мы можем прийти сюда,



80

00:05:16,000 --> 00:05:20,000

и установите circle.defaultLocation, давайте посмотрим



81

00:05:20,000 --> 00:05:24,000

что произойдет, если мы установим это в 1. Сохраните изменения,



82

00:05:24,000 --> 00:05:28,000

и вот наша ошибка, неверное местоположение. Итак, подведем итоги



83

00:05:28,000 --> 00:05:32,000

использовать свойство object.define для определения получателей,



84

00:05:32,000 --> 00:05:36,000

и / или сеттеры.